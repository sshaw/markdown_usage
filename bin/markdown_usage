#!/usr/bin/env ruby

require "stringio"
require "tempfile"
require "fileutils"

require "markdown_usage"

def script?(path)
  # Other langs that support DATA sections?
  %w[.rb .pl].include?(File.extname(path)) ||
    File.file?(path) && File.open(path) { |io| return io.gets =~ /\A#!.*\b(?:perl|ruby)/ }
end

def usage(status = 1)
  MarkdownUsage(:source => "README", :sections => "`markdown_usage` Command")
end

options = { :exit => false }

while ARGV.any?
  case ARGV[0]
  when "-h", "--help"
    usage(0)
  when "-o"
    ARGV.shift
    usage unless ARGV[0]
    output = ARGV.shift
  when "-s"
    ARGV.shift
    usage unless ARGV[0]
    options[:sections] = ARGV.shift.split(",")
  when "-v", "--version"
    puts "v#{MarkdownUsage::VERSION}"
    exit
  else
    options[:source] = ARGV.shift
  end
end

usage unless options[:source]

unless output
  MarkdownUsage(options.merge(:output => $stdout))
  exit
end

unless script?(output)
  File.open(output, "w+") { |io| MarkdownUsage.print(options.merge(:output => io)) }
  exit
end

io = StringIO.new
MarkdownUsage(options.merge(:output => io))
io.rewind

data = File.read(output)
code = data.split(/^__END__$/, 2)
code[1] = io.string

out = Tempfile.new("MarkdownUsage")
out.puts code[0]
out.puts "__END__"
out << code[1]
out.close

# Will this reset permissions on Windows?
FileUtils.chmod(File.stat(output).mode, out.path)
FileUtils.mv(out.path, output)

out.unlink
